pipeline {
    agent any
    
    environment {
        DOCKER_USERNAME = 'jazteng2'
        DOCKER_IMAGE_NAME = 'dev-evo-site'
        DOCKER_IMAGE_TAG = 'latest'
        EC2_IP = '34.229.41.139'
        EC2_USER = 'ec2-user'
    }
    
    stages {
        stage("Clone Repo") {
            steps {
                git credentialsId: 'github-cred', url: 'https://github.com/jazteng2/Dep-Evo-Site.git', branch: 'main'
                echo "Cloning Repository from Github"
            }
        }
        stage("Check Docker version") {
            steps {
                bat 'docker --version'
                bat 'docker-compose --version'
                echo "Testing docker setup"
            }
        }
        stage("Build") {
            steps {
                script {
                    // Create image
                    def fullImageName = "${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                    bat "docker build -t ${DOCKER_IMAGE_NAME} -f Dockerfile ."
                    bat "docker image tag ${DOCKER_IMAGE_NAME} ${fullImageName}"       

                    //Push image
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-jazteng2-creds', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        // bat "echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin"
                        bat "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                        bat "docker image push ${fullImageName}"
                    }
                }
            }
        }
        stage("Deploy to EC2") {
            steps {
                script {
                    def fullImageName = "${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                    def cmd = "docker stop \$(docker ps -a -q); docker rm \$(docker ps -a -q); docker remove ${fullImageName};docker run -d -p 3002:3000 ${fullImageName}"
                    withCredentials([sshUserPrivateKey(credentialsId: 'AWS_SSH_CRED', keyFileVariable: 'PK')]) {
                        bat "ssh -i $PK ${EC2_USER}@${EC2_IP} $cmd"
                    }
                }
            }
        }
    }
}